{"version":3,"sources":["routes-and-templates/tests/app.jshint.js","routes-and-templates/tests/grader/bricks-test.js","routes-and-templates/tests/grader/bricks-test.jshint.js","routes-and-templates/tests/grader/lego-path-loads-brick-template-test.js","routes-and-templates/tests/grader/lego-path-loads-brick-template-test.jshint.js","routes-and-templates/tests/helpers/destroy-app.js","routes-and-templates/tests/helpers/destroy-app.jshint.js","routes-and-templates/tests/helpers/module-for-acceptance.js","routes-and-templates/tests/helpers/module-for-acceptance.jshint.js","routes-and-templates/tests/helpers/resolver.js","routes-and-templates/tests/helpers/resolver.jshint.js","routes-and-templates/tests/helpers/start-app.js","routes-and-templates/tests/helpers/start-app.jshint.js","routes-and-templates/tests/router.jshint.js","routes-and-templates/tests/routes/bricks.jshint.js","routes-and-templates/tests/test-helper.js","routes-and-templates/tests/test-helper.jshint.js","routes-and-templates/tests/unit/routes/bricks-test.js","routes-and-templates/tests/unit/routes/bricks-test.jshint.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["define('routes-and-templates/tests/app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - app.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'app.js should pass jshint.');\n  });\n});","define('routes-and-templates/tests/grader/bricks-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:bricks', 'Quiz - Route', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('bricks exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route, '\"brick\" route exists');\n  });\n});","define('routes-and-templates/tests/grader/bricks-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - grader/bricks-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'grader/bricks-test.js should pass jshint.');\n  });\n});","define('routes-and-templates/tests/grader/lego-path-loads-brick-template-test', ['exports', 'qunit', 'routes-and-templates/tests/helpers/module-for-acceptance'], function (exports, _qunit, _routesAndTemplatesTestsHelpersModuleForAcceptance) {\n\n  (0, _routesAndTemplatesTestsHelpersModuleForAcceptance['default'])('Quiz - Routes and Template');\n\n  function elementExists(elementToFind) {\n    return find(elementToFind).text().length > 0;\n  }\n\n  function canSeeTemplateContents(textToFind) {\n    return find('.contents').text().toLowerCase().indexOf(textToFind) >= 0;\n  }\n\n  (0, _qunit.test)('Can see brick content after loading /legos', function (assert) {\n    visit('/legos');\n\n    andThen(function () {\n      assert.equal(currentURL(), '/legos', 'The correct path has not been updated to \"/legos\".');\n      assert.equal(currentRouteName(), 'bricks', 'The current route should not have changed, but stayed \"bricks\".');\n      assert.equal(elementExists('#brick-heading'), true, 'Brick template has a heading with ID \"brick-heading\".');\n      assert.equal(elementExists('.colors'), true, 'Color list with class \"colors\" exists.');\n      assert.equal(canSeeTemplateContents('red'), true, 'Can see the color \"red\" in the brick template.');\n      assert.equal(canSeeTemplateContents('blue'), true, 'Can see the color \"blue\" in the brick template.');\n      assert.equal(canSeeTemplateContents('green'), true, 'Can see the color \"green\" in the brick template.');\n    });\n  });\n});","define('routes-and-templates/tests/grader/lego-path-loads-brick-template-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - grader/lego-path-loads-brick-template-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'grader/lego-path-loads-brick-template-test.js should pass jshint.');\n  });\n});","define('routes-and-templates/tests/helpers/destroy-app', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = destroyApp;\n\n  function destroyApp(application) {\n    _ember['default'].run(application, 'destroy');\n  }\n});","define('routes-and-templates/tests/helpers/destroy-app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - helpers/destroy-app.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/destroy-app.js should pass jshint.');\n  });\n});","define('routes-and-templates/tests/helpers/module-for-acceptance', ['exports', 'qunit', 'routes-and-templates/tests/helpers/start-app', 'routes-and-templates/tests/helpers/destroy-app'], function (exports, _qunit, _routesAndTemplatesTestsHelpersStartApp, _routesAndTemplatesTestsHelpersDestroyApp) {\n  exports['default'] = function (name) {\n    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n    (0, _qunit.module)(name, {\n      beforeEach: function beforeEach() {\n        this.application = (0, _routesAndTemplatesTestsHelpersStartApp['default'])();\n\n        if (options.beforeEach) {\n          options.beforeEach.apply(this, arguments);\n        }\n      },\n\n      afterEach: function afterEach() {\n        (0, _routesAndTemplatesTestsHelpersDestroyApp['default'])(this.application);\n\n        if (options.afterEach) {\n          options.afterEach.apply(this, arguments);\n        }\n      }\n    });\n  };\n});","define('routes-and-templates/tests/helpers/module-for-acceptance.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - helpers/module-for-acceptance.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/module-for-acceptance.js should pass jshint.');\n  });\n});","define('routes-and-templates/tests/helpers/resolver', ['exports', 'ember-resolver', 'routes-and-templates/config/environment'], function (exports, _emberResolver, _routesAndTemplatesConfigEnvironment) {\n\n  var resolver = _emberResolver['default'].create();\n\n  resolver.namespace = {\n    modulePrefix: _routesAndTemplatesConfigEnvironment['default'].modulePrefix,\n    podModulePrefix: _routesAndTemplatesConfigEnvironment['default'].podModulePrefix\n  };\n\n  exports['default'] = resolver;\n});","define('routes-and-templates/tests/helpers/resolver.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - helpers/resolver.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/resolver.js should pass jshint.');\n  });\n});","define('routes-and-templates/tests/helpers/start-app', ['exports', 'ember', 'routes-and-templates/app', 'routes-and-templates/config/environment'], function (exports, _ember, _routesAndTemplatesApp, _routesAndTemplatesConfigEnvironment) {\n  exports['default'] = startApp;\n\n  function startApp(attrs) {\n    var application = undefined;\n\n    var attributes = _ember['default'].merge({}, _routesAndTemplatesConfigEnvironment['default'].APP);\n    attributes = _ember['default'].merge(attributes, attrs); // use defaults, but you can override;\n\n    _ember['default'].run(function () {\n      application = _routesAndTemplatesApp['default'].create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n    });\n\n    return application;\n  }\n});","define('routes-and-templates/tests/helpers/start-app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - helpers/start-app.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/start-app.js should pass jshint.');\n  });\n});","define('routes-and-templates/tests/router.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - router.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'router.js should pass jshint.');\n  });\n});","define('routes-and-templates/tests/routes/bricks.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/bricks.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/bricks.js should pass jshint.');\n  });\n});","define('routes-and-templates/tests/test-helper', ['exports', 'routes-and-templates/tests/helpers/resolver', 'ember-qunit'], function (exports, _routesAndTemplatesTestsHelpersResolver, _emberQunit) {\n\n  (0, _emberQunit.setResolver)(_routesAndTemplatesTestsHelpersResolver['default']);\n});","define('routes-and-templates/tests/test-helper.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - test-helper.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'test-helper.js should pass jshint.');\n  });\n});","define('routes-and-templates/tests/unit/routes/bricks-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:bricks', 'Unit | Route | bricks', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('routes-and-templates/tests/unit/routes/bricks-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/routes/bricks-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/bricks-test.js should pass jshint.');\n  });\n});","/* jshint ignore:start */\n\nrequire('routes-and-templates/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n\n/* jshint ignore:end */\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;","file":"tests.js"}